# -*- coding: utf-8 -*-
# -*- mode: org -*-
#+startup: beamer overview indent
#+LANGUAGE: pt-br
#+TAGS: noexport(n)
#+EXPORT_EXCLUDE_TAGS: noexport
#+EXPORT_SELECT_TAGS: export

#+Title: LL(1): Introdução e Gramática
#+Author: Prof. Lucas M. Schnorr (UFRGS)
#+Date: \copyleft

#+LaTeX_CLASS: beamer
#+LaTeX_CLASS_OPTIONS: [xcolor=dvipsnames]
#+OPTIONS:   H:1 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+LATEX_HEADER: \input{../org-babel.tex}

* Videos                                                           :noexport:

- Análise LL(1): https://www.youtube.com/watch?v=6DeJtQJzTf0&index=17&list=PLkXSpNly5xMrKVqNR7ST3kePc0-JkoH7V
  - https://www.youtube.com/watch?v=1QeP9cSeDD4&index=32&list=PLkXSpNly5xMrKVqNR7ST3kePc0-JkoH7V
- Tabela LL(1): https://www.youtube.com/watch?v=oQawGigbVk4&index=18&list=PLkXSpNly5xMrKVqNR7ST3kePc0-JkoH7V
- Exemplos
  - https://www.youtube.com/watch?v=AyLzlrBZ0hA&index=33&list=PLkXSpNly5xMrKVqNR7ST3kePc0-JkoH7V
  - https://www.youtube.com/watch?v=87VbeBEP8ZU&index=34&list=PLkXSpNly5xMrKVqNR7ST3kePc0-JkoH7V

* Como funciona a Análise LL(1)
Utiliza uma *pilha explícita* (ao invés de recursão)
+ Três tipos de ações: empilhamento, casamento e aceita

Sendo a gramática de cadeias de parênteses balanceados
| S | \rightarrow ( S ) S \vert \epsilon |

#+latex: \vfill\pause

Análise da entrada *()*
| Pilha de análise sintática | Entrada | Ação        |
|----------------------------+---------+-------------|
| $ S                        | () $    | S \rightarrow ( S ) S |
| $ S ) S (                  | () $    | casamento   |
| $ S ) S                    | ) $     | S \rightarrow \epsilon       |
| $ S )                      | ) $     | casamento   |
| $ S                        | $       | S \rightarrow \epsilon       |
| $                          | $       | aceita      |

+ Relação com passos de *derivação à esquerda* da cadeia
+ Decisões guiadas pela *Tabela de Análise Sintática LL(1)*
* Tabela de Análise Sintática LL(1)
Correlaciona cada não-terminal com cada terminal \Rightarrow \alert{M[NT,T]}
+ Controla as ações de empilhamento (e substituição por \epsilon)

#+latex:\vfill\pause

+ Sendo a gramática que gera cadeias de parênteses balanceados
| S       | \rightarrow ( S ) S \vert \epsilon |

#+Latex:\vfill\pause

*Tabela de Análise Sintática LL(1)* para esta gramática
  | M[NT, T] | (                     | )                      | $                      |
  | /       | <>                    | >                      |                        |
  |---------+-----------------------+------------------------+------------------------|
  | S       | S \rightarrow ( S ) S | S \rightarrow \epsilon | S \rightarrow \epsilon |

#+Latex:\vfill\pause

A tabela guia as ações de empilhamento da análise LL(1)
+ *Exemplo* com a entrada *()()*
* Definição Formal de Gramáticas LL(1)
Considerando A $\rightarrow$ $\alpha$ $\vert$ $\beta$

#+Latex:\vfill

1. Para um terminal *a*, somente uma produção começa por *a*
   + Primeiro(\alpha) $\bigcap$ Primeiro(\beta) = \emptyset
2. Somente uma produção pode derivar para \epsilon
3. Se uma produção deriva pra vazio, a outra não deve iniciar com o
   que vem depois de A, ou seja
   - Se \alpha \Rightarrow^* \epsilon, Primeiro(\beta) $\bigcap$ Sequência(A) = \emptyset 
   - Se \beta \Rightarrow^* \epsilon, Primeiro(\alpha) $\bigcap$ Sequência(A) = \emptyset

#+latex:\vfill\pause
São LL(1)?
  | S  | \rightarrow | iEtSS' \vert a |   | \hspace{2cm} |   | A | \rightarrow | a \vert B  |
  | S' | \rightarrow | eS \vert \epsilon     |   |              |   | B | \rightarrow | aA \vert b |
  | E  | \rightarrow | b          |   |              |   |   |   |        |

